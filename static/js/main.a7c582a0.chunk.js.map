{"version":3,"sources":["components/ContactForm/ContactForm.jsx","App.jsx","index.js"],"names":["ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleOnChange","e","setState","target","value","handleOnSubmit","preventDefault","newContact","id","props","addContact","autoComplete","onSubmit","this","htmlFor","type","pattern","title","required","onChange","Component","App","contacts","prevState","newContacts","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIMA,E,4MAKJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,c,EACdC,cAAgBD,c,EAEhBE,eAAiB,SAAAC,GACf,EAAKC,SAAL,eACGD,EAAEE,OAAOR,KAAOM,EAAEE,OAAOC,S,EAI9BC,eAAiB,SAAAJ,GACfA,EAAEK,iBACF,IAAMC,EAAa,CACjBC,GAAIV,cACJH,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAErB,EAAKa,MAAMC,WAAWH,GACtB,EAAKL,SAAS,CACZP,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,uBAAMe,aAAc,MAAOC,SAAUC,KAAKR,eAA1C,UACE,wBAAOS,QAASD,KAAKhB,YAArB,iBAEE,uBACEW,GAAIK,KAAKhB,YACTkB,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOS,KAAKnB,MAAMC,KAClBwB,SAAUN,KAAKb,oBAGnB,wBAAOc,QAASD,KAAKd,cAArB,mBAEE,uBACES,GAAIK,KAAKd,cACTgB,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRd,MAAOS,KAAKnB,MAAME,OAClBuB,SAAUN,KAAKb,oBAGnB,wBAAQe,KAAM,SAAd,gC,GA9DkBK,aCDpBC,E,4MACJ3B,MAAQ,CACN4B,SAAU,CACR,CAAE3B,KAAM,OAAQa,GAAI,EAAGZ,OAAQ,aAC/B,CAAED,KAAM,QAASa,GAAI,EAAGZ,OAAQ,e,EAIpCc,WAAa,SAAAH,GACX,EAAKL,UAAS,SAAAqB,GACZ,IAAMC,EAAW,YAAOD,EAAUD,UAElC,OADAE,EAAYC,KAAKlB,GACV,CACLe,SAAUE,O,4CAKhB,WACE,OACE,gCACE,2CACA,cAAC,EAAD,CAAad,WAAYG,KAAKH,oB,GAtBpBU,aCElBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a7c582a0.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleOnChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.addContact(newContact);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form autoComplete={'off'} onSubmit={this.handleOnSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleOnChange}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            id={this.numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleOnChange}\n          />\n        </label>\n        <button type={'submit'}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport { ContactForm };\n","import { Component } from 'react';\nimport { ContactForm } from './components/ContactForm/ContactForm';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { name: 'John', id: 5, number: '555-55-54' },\n      { name: 'Sofie', id: 6, number: '555-55-55' },\n    ],\n  };\n\n  addContact = newContact => {\n    this.setState(prevState => {\n      const newContacts = [...prevState.contacts];\n      newContacts.push(newContact);\n      return {\n        contacts: newContacts,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n      </div>\n    );\n  }\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}